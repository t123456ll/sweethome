{"version":3,"sources":["webpack:///./src/pages/contact/file-upload.js"],"names":["encode","data","formData","FormData","Object","keys","key","append","Contact","props","handleChange","e","setState","target","name","value","handleAttachment","files","handleSubmit","preventDefault","form","fetch","method","body","getAttribute","state","then","navigate","catch","error","alert","render","className","action","data-netlify","data-netlify-honeypot","onSubmit","this","type","hidden","onChange","htmlFor","id","required","React","Component"],"mappings":"yPAIA,SAASA,EAAOC,GAGd,IAFA,IAAMC,EAAW,IAAIC,SAErB,MAAkBC,OAAOC,KAAKJ,GAA9B,eAAqC,CAAhC,IAAMK,EAAG,KACZJ,EAASK,OAAOD,EAAKL,EAAKK,IAG5B,OAAOJ,E,IAGYM,E,oBACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAIFC,aAAe,SAAAC,GAAM,IAAD,EAClB,EAAKC,WAAL,MAAiBD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,MAA1C,KANiB,EASnBC,iBAAmB,SAAAL,GAAM,IAAD,EACtB,EAAKC,WAAL,MAAiBD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOI,MAAM,GAAhD,KAViB,EAanBC,aAAe,SAAAP,GACbA,EAAEQ,iBACF,IAAMC,EAAOT,EAAEE,OACfQ,MAAM,IAAK,CACTC,OAAQ,OACRC,KAAMvB,EAAO,OAAD,QACV,YAAaoB,EAAKI,aAAa,SAC5B,EAAKC,UAGTC,MAAK,kBAAMC,mBAASP,EAAKI,aAAa,cACtCI,OAAM,SAAAC,GAAK,OAAIC,MAAMD,OAtBxB,EAAKJ,MAAQ,GAFI,E,0GA2BnBM,OAAA,WACE,OACE,kBAAC,IAAD,KACE,6BAASC,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,2CACA,0BACElB,KAAK,cACLQ,OAAO,OACPW,OAAO,mBACPC,eAAa,OACbC,wBAAsB,YACtBC,SAAUC,KAAKnB,cAGf,2BAAOoB,KAAK,SAASxB,KAAK,YAAYC,MAAM,gBAC5C,yBAAKwB,QAAM,GACT,sDACuB,IACrB,2BAAOzB,KAAK,YAAY0B,SAAUH,KAAK3B,iBAG3C,yBAAKsB,UAAU,SACb,2BAAOA,UAAU,QAAQS,QAAS,QAAlC,aAGA,yBAAKT,UAAU,WACb,2BACEA,UAAU,QACVM,KAAM,OACNxB,KAAM,OACN0B,SAAUH,KAAK3B,aACfgC,GAAI,OACJC,UAAU,MAIhB,yBAAKX,UAAU,SACb,yBAAKA,UAAU,QACb,2BAAOA,UAAU,cACf,2BACEA,UAAU,aACVM,KAAK,OACLxB,KAAK,aACL0B,SAAUH,KAAKrB,mBAEjB,0BAAMgB,UAAU,YACd,0BAAMA,UAAU,cAAhB,sBAKR,yBAAKA,UAAU,SACb,4BAAQA,UAAU,iBAAiBM,KAAK,UAAxC,e,GAlFmBM,IAAMC","file":"component---src-pages-contact-file-upload-js-aea823af8fe84f23614a.js","sourcesContent":["import React from 'react'\nimport { navigate } from 'gatsby-link'\nimport Layout from '../../components/Layout'\n\nfunction encode(data) {\n  const formData = new FormData()\n\n  for (const key of Object.keys(data)) {\n    formData.append(key, data[key])\n  }\n\n  return formData\n}\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleAttachment = e => {\n    this.setState({ [e.target.name]: e.target.files[0] })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const form = e.target\n    fetch('/', {\n      method: 'POST',\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...this.state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute('action')))\n      .catch(error => alert(error))\n  }\n\n  render() {\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <h1>File Upload</h1>\n              <form\n                name=\"file-upload\"\n                method=\"post\"\n                action=\"/contact/thanks/\"\n                data-netlify=\"true\"\n                data-netlify-honeypot=\"bot-field\"\n                onSubmit={this.handleSubmit}\n              >\n                {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n                <input type=\"hidden\" name=\"form-name\" value=\"file-upload\" />\n                <div hidden>\n                  <label>\n                    Don’t fill this out:{' '}\n                    <input name=\"bot-field\" onChange={this.handleChange} />\n                  </label>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor={'name'}>\n                    Your name\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type={'text'}\n                      name={'name'}\n                      onChange={this.handleChange}\n                      id={'name'}\n                      required={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"file\">\n                    <label className=\"file-label\">\n                      <input\n                        className=\"file-input\"\n                        type=\"file\"\n                        name=\"attachment\"\n                        onChange={this.handleAttachment}\n                      />\n                      <span className=\"file-cta\">\n                        <span className=\"file-label\">Choose a file…</span>\n                      </span>\n                    </label>\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <button className=\"button is-link\" type=\"submit\">\n                    Send\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n"],"sourceRoot":""}