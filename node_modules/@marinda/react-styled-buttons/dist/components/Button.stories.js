"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.primary = exports["default"] = void 0;

var _core = require("@emotion/core");

var _react = _interopRequireDefault(require("react"));

var _addonKnobs = require("@storybook/addon-knobs");

var _addonA11y = require("@storybook/addon-a11y");

var _Button = _interopRequireDefault(require("./Button"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

// variant knob
var variantName = "variant";
var variantValuesObj = {
  primary: "primary",
  secondary: "secondary",
  accent: "accent",
  accent2: "accent2",
  accent3: "accent3",
  accent4: "accent4",
  highlight: "highlight",
  muted: "muted",
  gray: "gray"
};
var variantOptionsObj = {
  display: "inline-radio"
};

var variantOptions = function variantOptions() {
  var variantDefaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "primary";
  return (0, _addonKnobs.optionsKnob)(variantName, variantValuesObj, variantDefaultValue, variantOptionsObj);
}; // size knob


var sizeLabel = "size";
var sizeValuesObj = {
  small: "small",
  medium: "medium",
  large: "large"
};
var sizeDefaultValue = "large";
var sizeOptionsObj = {
  display: "inline-radio"
};

var sizeOptions = function sizeOptions() {
  return (0, _addonKnobs.optionsKnob)(sizeLabel, sizeValuesObj, sizeDefaultValue, sizeOptionsObj);
}; // mode knob


var modeName = "mode";
var modeValuesObj = {
  light: "light",
  dark: "dark"
};
var modeDefaultValue = "light";
var modeOptionsObj = {
  display: "inline-radio"
};

var modeOptions = function modeOptions() {
  return (0, _addonKnobs.optionsKnob)(modeName, modeValuesObj, modeDefaultValue, modeOptionsObj);
}; // as knob


var asName = "as";
var asValuesObj = {
  button: "button",
  a: "a"
};
var asOptionsObj = {
  display: "inline-radio"
};

var asOptions = function asOptions() {
  var asDefaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "button";
  return (0, _addonKnobs.optionsKnob)(asName, asValuesObj, asDefaultValue, asOptionsObj);
};

var _default = {
  title: "Buttons|Button",
  decorators: [_addonKnobs.withKnobs, _addonA11y.withA11y]
};
exports["default"] = _default;

var primary = function primary() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$children = _ref.children,
      children = _ref$children === void 0 ? "Primary Button" : _ref$children,
      onClick = _ref.onClick,
      disabled = _ref.disabled,
      _ref$disableColorTran = _ref.disableColorTransforms,
      disableColorTransforms = _ref$disableColorTran === void 0 ? false : _ref$disableColorTran,
      _ref$disableAnimation = _ref.disableAnimation,
      disableAnimation = _ref$disableAnimation === void 0 ? false : _ref$disableAnimation,
      _ref$id = _ref.id,
      id = _ref$id === void 0 ? "primary-button" : _ref$id,
      as = _ref.as;

  return (0, _core.jsx)(_Button["default"], {
    variant: variantOptions(),
    disabled: (0, _addonKnobs["boolean"])("Disabled", disabled),
    disableColorTransforms: (0, _addonKnobs["boolean"])("Disable color transforms", disableColorTransforms),
    disableAnimation: (0, _addonKnobs["boolean"])("Disable Animation", disableAnimation),
    size: sizeOptions(),
    mode: modeOptions(),
    as: asOptions(as),
    onClick: onClick,
    id: id
  }, children);
};

exports.primary = primary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL0J1dHRvbi5zdG9yaWVzLmpzIl0sIm5hbWVzIjpbInZhcmlhbnROYW1lIiwidmFyaWFudFZhbHVlc09iaiIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJhY2NlbnQiLCJhY2NlbnQyIiwiYWNjZW50MyIsImFjY2VudDQiLCJoaWdobGlnaHQiLCJtdXRlZCIsImdyYXkiLCJ2YXJpYW50T3B0aW9uc09iaiIsImRpc3BsYXkiLCJ2YXJpYW50T3B0aW9ucyIsInZhcmlhbnREZWZhdWx0VmFsdWUiLCJzaXplTGFiZWwiLCJzaXplVmFsdWVzT2JqIiwic21hbGwiLCJtZWRpdW0iLCJsYXJnZSIsInNpemVEZWZhdWx0VmFsdWUiLCJzaXplT3B0aW9uc09iaiIsInNpemVPcHRpb25zIiwibW9kZU5hbWUiLCJtb2RlVmFsdWVzT2JqIiwibGlnaHQiLCJkYXJrIiwibW9kZURlZmF1bHRWYWx1ZSIsIm1vZGVPcHRpb25zT2JqIiwibW9kZU9wdGlvbnMiLCJhc05hbWUiLCJhc1ZhbHVlc09iaiIsImJ1dHRvbiIsImEiLCJhc09wdGlvbnNPYmoiLCJhc09wdGlvbnMiLCJhc0RlZmF1bHRWYWx1ZSIsInRpdGxlIiwiZGVjb3JhdG9ycyIsIndpdGhLbm9icyIsIndpdGhBMTF5IiwiY2hpbGRyZW4iLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJkaXNhYmxlQ29sb3JUcmFuc2Zvcm1zIiwiZGlzYWJsZUFuaW1hdGlvbiIsImlkIiwiYXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUtBOztBQUVBOzs7O0FBRUE7QUFDQSxJQUFNQSxXQUFXLEdBQUcsU0FBcEI7QUFDQSxJQUFNQyxnQkFBZ0IsR0FBRztBQUN2QkMsRUFBQUEsT0FBTyxFQUFFLFNBRGM7QUFFdkJDLEVBQUFBLFNBQVMsRUFBRSxXQUZZO0FBR3ZCQyxFQUFBQSxNQUFNLEVBQUUsUUFIZTtBQUl2QkMsRUFBQUEsT0FBTyxFQUFFLFNBSmM7QUFLdkJDLEVBQUFBLE9B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LFVBQVIsRUFBb0I4QixRQUFwQixDQUZaO0FBR0UsSUFBQSxzQkFBc0IsRUFBRSw0QkFDdEIsMEJBRHNCLEVBRXRCQyxzQkFGc0IsQ0FIMUI7QUFPRSxJQUFBLGdCQUFnQixFQUFFLDRCQUFRLG1CQUFSLEVBQTZCQyxnQkFBN0IsQ0FQcEI7QUFRRSxJQUFBLElBQUksRUFBRXZCLFdBQVcsRUFSbkI7QUFTRSxJQUFBLElBQUksRUFBRU8sV0FBVyxFQVRuQjtBQVVFLElBQUEsRUFBRSxFQUFFTSxTQUFTLENBQUNZLEVBQUQsQ0FWZjtBQVdFLElBQUEsT0FBTyxFQUFFTCxPQVhYO0FBWUUsSUFBQSxFQUFFLEVBQUVJO0FBWk4sS0FjR0wsUUFkSCxDQURGO0FBa0JELENBM0JNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtcbiAgYm9vbGVhbixcbiAgb3B0aW9uc0tub2IgYXMgb3B0aW9ucyxcbiAgd2l0aEtub2JzXG59IGZyb20gXCJAc3Rvcnlib29rL2FkZG9uLWtub2JzXCI7XG5pbXBvcnQgeyB3aXRoQTExeSB9IGZyb20gXCJAc3Rvcnlib29rL2FkZG9uLWExMXlcIjtcblxuaW1wb3J0IEJ1dHRvbiBmcm9tIFwiLi9CdXR0b25cIjtcblxuLy8gdmFyaWFudCBrbm9iXG5jb25zdCB2YXJpYW50TmFtZSA9IFwidmFyaWFudFwiO1xuY29uc3QgdmFyaWFudFZhbHVlc09iaiA9IHtcbiAgcHJpbWFyeTogXCJwcmltYXJ5XCIsXG4gIHNlY29uZGFyeTogXCJzZWNvbmRhcnlcIixcbiAgYWNjZW50OiBcImFjY2VudFwiLFxuICBhY2NlbnQyOiBcImFjY2VudDJcIixcbiAgYWNjZW50MzogXCJhY2NlbnQzXCIsXG4gIGFjY2VudDQ6IFwiYWNjZW50NFwiLFxuICBoaWdobGlnaHQ6IFwiaGlnaGxpZ2h0XCIsXG4gIG11dGVkOiBcIm11dGVkXCIsXG4gIGdyYXk6IFwiZ3JheVwiXG59O1xuY29uc3QgdmFyaWFudE9wdGlvbnNPYmogPSB7XG4gIGRpc3BsYXk6IFwiaW5saW5lLXJhZGlvXCJcbn07XG5jb25zdCB2YXJpYW50T3B0aW9ucyA9ICh2YXJpYW50RGVmYXVsdFZhbHVlID0gXCJwcmltYXJ5XCIpID0+XG4gIG9wdGlvbnMoXG4gICAgdmFyaWFudE5hbWUsXG4gICAgdmFyaWFudFZhbHVlc09iaixcbiAgICB2YXJpYW50RGVmYXVsdFZhbHVlLFxuICAgIHZhcmlhbnRPcHRpb25zT2JqXG4gICk7XG5cbi8vIHNpemUga25vYlxuY29uc3Qgc2l6ZUxhYmVsID0gXCJzaXplXCI7XG5jb25zdCBzaXplVmFsdWVzT2JqID0ge1xuICBzbWFsbDogXCJzbWFsbFwiLFxuICBtZWRpdW06IFwibWVkaXVtXCIsXG4gIGxhcmdlOiBcImxhcmdlXCJcbn07XG5jb25zdCBzaXplRGVmYXVsdFZhbHVlID0gXCJsYXJnZVwiO1xuY29uc3Qgc2l6ZU9wdGlvbnNPYmogPSB7XG4gIGRpc3BsYXk6IFwiaW5saW5lLXJhZGlvXCJcbn07XG5jb25zdCBzaXplT3B0aW9ucyA9ICgpID0+XG4gIG9wdGlvbnMoc2l6ZUxhYmVsLCBzaXplVmFsdWVzT2JqLCBzaXplRGVmYXVsdFZhbHVlLCBzaXplT3B0aW9uc09iaik7XG5cbi8vIG1vZGUga25vYlxuY29uc3QgbW9kZU5hbWUgPSBcIm1vZGVcIjtcbmNvbnN0IG1vZGVWYWx1ZXNPYmogPSB7XG4gIGxpZ2h0OiBcImxpZ2h0XCIsXG4gIGRhcms6IFwiZGFya1wiXG59O1xuY29uc3QgbW9kZURlZmF1bHRWYWx1ZSA9IFwibGlnaHRcIjtcbmNvbnN0IG1vZGVPcHRpb25zT2JqID0ge1xuICBkaXNwbGF5OiBcImlubGluZS1yYWRpb1wiXG59O1xuY29uc3QgbW9kZU9wdGlvbnMgPSAoKSA9PlxuICBvcHRpb25zKG1vZGVOYW1lLCBtb2RlVmFsdWVzT2JqLCBtb2RlRGVmYXVsdFZhbHVlLCBtb2RlT3B0aW9uc09iaik7XG5cbi8vIGFzIGtub2JcbmNvbnN0IGFzTmFtZSA9IFwiYXNcIjtcbmNvbnN0IGFzVmFsdWVzT2JqID0ge1xuICBidXR0b246IFwiYnV0dG9uXCIsXG4gIGE6IFwiYVwiXG59O1xuY29uc3QgYXNPcHRpb25zT2JqID0ge1xuICBkaXNwbGF5OiBcImlubGluZS1yYWRpb1wiXG59O1xuY29uc3QgYXNPcHRpb25zID0gKGFzRGVmYXVsdFZhbHVlID0gXCJidXR0b25cIikgPT5cbiAgb3B0aW9ucyhhc05hbWUsIGFzVmFsdWVzT2JqLCBhc0RlZmF1bHRWYWx1ZSwgYXNPcHRpb25zT2JqKTtcblxuZXhwb3J0IGRlZmF1bHQgeyB0aXRsZTogXCJCdXR0b25zfEJ1dHRvblwiLCBkZWNvcmF0b3JzOiBbd2l0aEtub2JzLCB3aXRoQTExeV0gfTtcblxuZXhwb3J0IGNvbnN0IHByaW1hcnkgPSAoe1xuICBjaGlsZHJlbiA9IFwiUHJpbWFyeSBCdXR0b25cIixcbiAgb25DbGljayxcbiAgZGlzYWJsZWQsXG4gIGRpc2FibGVDb2xvclRyYW5zZm9ybXMgPSBmYWxzZSxcbiAgZGlzYWJsZUFuaW1hdGlvbiA9IGZhbHNlLFxuICBpZCA9IFwicHJpbWFyeS1idXR0b25cIixcbiAgYXNcbn0gPSB7fSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxCdXR0b25cbiAgICAgIHZhcmlhbnQ9e3ZhcmlhbnRPcHRpb25zKCl9XG4gICAgICBkaXNhYmxlZD17Ym9vbGVhbihcIkRpc2FibGVkXCIsIGRpc2FibGVkKX1cbiAgICAgIGRpc2FibGVDb2xvclRyYW5zZm9ybXM9e2Jvb2xlYW4oXG4gICAgICAgIFwiRGlzYWJsZSBjb2xvciB0cmFuc2Zvcm1zXCIsXG4gICAgICAgIGRpc2FibGVDb2xvclRyYW5zZm9ybXNcbiAgICAgICl9XG4gICAgICBkaXNhYmxlQW5pbWF0aW9uPXtib29sZWFuKFwiRGlzYWJsZSBBbmltYXRpb25cIiwgZGlzYWJsZUFuaW1hdGlvbil9XG4gICAgICBzaXplPXtzaXplT3B0aW9ucygpfVxuICAgICAgbW9kZT17bW9kZU9wdGlvbnMoKX1cbiAgICAgIGFzPXthc09wdGlvbnMoYXMpfVxuICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgIGlkPXtpZH1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9CdXR0b24+XG4gICk7XG59O1xuIl19