"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _core = require("@emotion/core");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _chromaJs = _interopRequireDefault(require("chroma-js"));

var _theme = _interopRequireDefault(require("../theme"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// CSS
var ButtonStyle = function ButtonStyle(_ref) {
  var _ref$theme = _ref.theme,
      _ref$theme$fontSizes = _ref$theme.fontSizes;
  _ref$theme$fontSizes = _ref$theme$fontSizes === void 0 ? [] : _ref$theme$fontSizes;

  var _ref$theme$fontSizes2 = _slicedToArray(_ref$theme$fontSizes, 4),
      fourthFontSize = _ref$theme$fontSizes2[3],
      _ref$theme$space = _ref$theme.space;

  _ref$theme$space = _ref$theme$space === void 0 ? [] : _ref$theme$space;

  var _ref$theme$space2 = _slicedToArray(_ref$theme$space, 4),
      fourthSpace = _ref$theme$space2[3],
      _ref$theme$radii = _ref$theme.radii;

  _ref$theme$radii = _ref$theme$radii === void 0 ? [] : _ref$theme$radii;

  var _ref$theme$radii2 = _slicedToArray(_ref$theme$radii, 2),
      secondRadius = _ref$theme$radii2[1],
      shadows = _ref$theme.shadows,
      _ref$themeColors = _ref.themeColors,
      background = _ref$themeColors.background,
      primary = _ref$themeColors.primary,
      disableColorTransforms = _ref.disableColorTransforms,
      disableAnimation = _ref.disableAnimation;

  return (
    /*#__PURE__*/
    (0, _core.css)("position:relative;cursor:pointer;outline:none;margin:0;padding:", fourthSpace, "px;width:auto;text-align:center;display:inline-block;border:none;border-radius:", secondRadius, ";background:", primary, ";color:", background, ";font-size:", fourthFontSize, ";font-family:inherit;line-height:inherit;font-weight:inherit;transform:translate3d(0,0,0);transition:", !disableAnimation ? "transform 0.3s ease-in-out, background 0.3s ease-in-out, color 0.3s ease-in-out, box-shadow 0.3s ease-in-out" : "", ";&:hover{background:", !disableColorTransforms ? (0, _chromaJs["default"])(primary).darken(0.2).saturate(1.5).hex() : primary, ";transform:", !disableAnimation ? "translate3d(0, -3px, 0)" : "", ";box-shadow:", !disableAnimation ? shadows["default"] : "", ";}&:focus{box-shadow:0 0px 8px ", (0, _chromaJs["default"])(primary).brighten(1).saturate(3).hex(), ";}&:active{transform:", !disableAnimation ? "translate3d(0, 1px, 0)" : "", ";}label:ButtonStyle;")
  );
};

var disabledStyle = {
  name: "vti5ju-disabledStyle",
  styles: "opacity:0.6;cursor:default;transition:none;transform:translate3d(0,0,0);pointer-events:none;cursor:none;label:disabledStyle;"
};

var VariantStyle = function VariantStyle(_ref2) {
  var colors = _ref2.colors,
      variant = _ref2.variant,
      disableColorTransforms = _ref2.disableColorTransforms;
  var variantColor = colors[variant];
  var hoverColor = variant === "gray" ? (0, _chromaJs["default"])(variantColor).darken(0.5).hex() : (0, _chromaJs["default"])(variantColor).saturate(0.5).hex();
  return (
    /*#__PURE__*/
    (0, _core.css)("background:", variantColor, ";color:", variant === "gray" || variant === "muted" ? colors.text : colors.background, ";&:hover{background:", disableColorTransforms ? hoverColor : variantColor, ";}&:focus{box-shadow:0 0px 8px ", (0, _chromaJs["default"])(variantColor).brighten(1).saturate(3).hex(), ";}label:VariantStyle;")
  );
};

var SmallButtonStyle = function SmallButtonStyle(_ref3) {
  var _ref3$space = _slicedToArray(_ref3.space, 3),
      secondSpace = _ref3$space[1],
      thirdSpace = _ref3$space[2],
      _ref3$fontSizes = _slicedToArray(_ref3.fontSizes, 3),
      thirdFontSize = _ref3$fontSizes[2];

  return (
    /*#__PURE__*/
    (0, _core.css)("padding:", secondSpace, "px ", thirdSpace, "px;font-size:", thirdFontSize, "px;label:SmallButtonStyle;")
  );
};

var MediumButtonStyle = function MediumButtonStyle(_ref4) {
  var _ref4$space = _slicedToArray(_ref4.space, 3),
      thirdSpace = _ref4$space[2];

  return (
    /*#__PURE__*/
    (0, _core.css)("padding:", thirdSpace, "px;label:MediumButtonStyle;")
  );
};

var composeStyles = function composeStyles(_ref5) {
  var theme = _ref5.theme,
      themeColors = _ref5.themeColors,
      variant = _ref5.variant,
      size = _ref5.size,
      disabled = _ref5.disabled,
      disableColorTransforms = _ref5.disableColorTransforms,
      disableAnimation = _ref5.disableAnimation;
  var cssStyles = [ButtonStyle({
    theme: theme,
    themeColors: themeColors,
    disableColorTransforms: disableColorTransforms,
    disableAnimation: disableAnimation
  })];
  var sizeCases = {
    small: function small() {
      return cssStyles.push(SmallButtonStyle(theme));
    },
    medium: function medium() {
      return cssStyles.push(MediumButtonStyle(theme));
    }
  };

  if (sizeCases[size]) {
    sizeCases[size]();
  }

  variant && variant !== "primary" && cssStyles.push(VariantStyle({
    colors: themeColors,
    variant: variant,
    disableColorTransforms: disableColorTransforms
  }));
  disabled && cssStyles.push(disabledStyle);
  return cssStyles;
};

function Button(_ref6) {
  var Element = _ref6.as,
      id = _ref6.id,
      onClick = _ref6.onClick,
      variant = _ref6.variant,
      size = _ref6.size,
      mode = _ref6.mode,
      disabled = _ref6.disabled,
      theme = _ref6.theme,
      disableColorTransforms = _ref6.disableColorTransforms,
      disableAnimation = _ref6.disableAnimation,
      props = _objectWithoutProperties(_ref6, ["as", "id", "onClick", "variant", "size", "mode", "disabled", "theme", "disableColorTransforms", "disableAnimation"]);

  var _useState = (0, _react.useState)(theme),
      _useState2 = _slicedToArray(_useState, 2),
      mergedTheme = _useState2[0],
      setMergedTheme = _useState2[1];

  var _useState3 = (0, _react.useState)(theme.colors),
      _useState4 = _slicedToArray(_useState3, 2),
      themeColors = _useState4[0],
      setThemeColors = _useState4[1];

  (0, _react.useEffect)(function () {
    if (mode !== "light") {
      var nextThemeColors = mergedTheme.colors.modes[mode];
      nextThemeColors && setThemeColors(nextThemeColors);
    }

    if (mode === "light") {
      var _nextThemeColors = mergedTheme.colors;
      _nextThemeColors && setThemeColors(_nextThemeColors);
    }
  }, [mode, mergedTheme]);
  (0, _react.useEffect)(function () {
    if (theme) {
      var nextMergedTheme = Object.assign({}, {
        colors: _theme["default"].colors,
        space: _theme["default"].space,
        fontSizes: _theme["default"].fontSizes,
        radii: _theme["default"].radii,
        shadows: _theme["default"].shadows
      }, theme);
      setMergedTheme(nextMergedTheme);
      var nextThemeColors = nextMergedTheme.colors;
      setThemeColors(nextThemeColors);
    }
  }, [theme]);
  var composedStyles = composeStyles({
    theme: mergedTheme,
    themeColors: themeColors,
    variant: variant,
    size: size,
    disabled: disabled,
    disableColorTransforms: disableColorTransforms,
    disableAnimation: disableAnimation
  });
  var type = Element === "button" && !props.type ? "button" : null;
  return (0, _core.jsx)(Element, _extends({
    css: composedStyles,
    id: id,
    "data-testid": id,
    onClick: onClick,
    type: type,
    disabled: disabled
  }, props), (0, _core.jsx)("span", null, props.children));
}

Button.defaultProps = {
  as: "button",
  id: "",
  testid: "",
  children: null,
  theme: _theme["default"],
  disabled: false,
  disableColorTransforms: false,
  disableAnimation: false,
  onClick: function onClick() {},
  mode: "light",
  variant: "primary",
  size: "large"
};
Button.propTypes = {
  id: _propTypes["default"].string,
  theme: _propTypes["default"].object,
  onClick: _propTypes["default"].func,
  variant: _propTypes["default"].oneOf(["primary", "secondary", "accent", "accent2", "accent3", "accent4", "muted", "highlight", "gray"]),
  size: _propTypes["default"].oneOf(["large", "medium", "small"]),
  mode: _propTypes["default"].oneOf(["light", "dark"]),
  disableColorTransforms: _propTypes["default"].bool,
  disableAnimation: _propTypes["default"].bool
};
var _default = Button;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,