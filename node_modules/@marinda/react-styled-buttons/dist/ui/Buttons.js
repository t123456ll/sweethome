"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _core = require("@emotion/core");

var _react = _interopRequireDefault(require("react"));

var _Button = _interopRequireDefault(require("../components/Button"));

var _theme = _interopRequireDefault(require("../theme"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

// styles
var globalStyle = {
  name: "11fs6pz-globalStyle",
  styles: "*{box-sizing:border-box;margin:0;}* + *{margin-top:1rem;}html,body{width:100%;height:100%;margin:0;padding:0;}body{font-family:\"Helvetica Neue\",Arial,Helvetica,sans-serif;}label:globalStyle;"
};

var gridStyle = function gridStyle(_ref2) {
  var text = _ref2.text,
      background = _ref2.background;
  return (
    /*#__PURE__*/
    (0, _core.css)("display:grid;grid-template-columns:1fr 3fr 1fr;grid-template-rows:auto 1fr 1fr;grid-template-areas:", "\n  'header header header'\n  '. buttons .'\n  '. . .'", ";background:", background, ";color:", text, ";width:100%;height:100%;transition:0.2s ease;section{position:relative;}h2{position:absolute;top:0px;left:0;text-transform:uppercase;}")
  );
};

var headerStyle = {
  name: "1tstz6r-headerStyle",
  styles: "grid-area:header;padding:30px;border-bottom:1px solid currentColor;display:flex;align-items:center;justify-content:center;> div{margin-top:0;button{margin:0 4px;}}label:headerStyle;"
};
var buttonWrapperStyle = {
  name: "1huk9yl-buttonWrapperStyle",
  styles: "grid-area:buttons;padding:30px;border-bottom:1px solid currentColor;display:flex;flex-wrap:wrap;align-items:center;justify-content:space-evenly;> button{flex:0 1 calc(50% - 20px);margin-top:20px;}label:buttonWrapperStyle;"
};
var _ref = {
  name: "y2p6nn-Buttons",
  styles: "color:black;background:peachpuff;&:hover,&:active{color:white;background:orangered;}label:Buttons;"
};

function Buttons(_ref3) {
  var mode = _ref3.mode,
      setMode = _ref3.setMode;
  var colors = _theme["default"].colors;
  var colormodeColors = mode === "light" ? colors : colors.modes.dark;
  return (0, _core.jsx)(_react["default"].Fragment, null, (0, _core.jsx)(_core.Global, {
    styles: globalStyle
  }), (0, _core.jsx)("div", {
    css: gridStyle({
      background: colormodeColors.background,
      text: colormodeColors.text
    })
  }, (0, _core.jsx)("div", {
    css: headerStyle
  }, (0, _core.jsx)(_Button["default"], {
    onClick: function onClick() {
      return setMode(mode === "light" ? "dark" : "light");
    },
    size: "small"
  }, "Show ", mode === "light" ? "dark" : "light", " mode")), (0, _core.jsx)("section", {
    css: buttonWrapperStyle
  }, (0, _core.jsx)(_Button["default"], {
    mode: mode
  }, "Primary Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    variant: "secondary"
  }, "Secondary Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    variant: "accent"
  }, "Accent1 Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    variant: "accent2"
  }, "Accent2 Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    variant: "accent3"
  }, "Accent3 Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    variant: "accent4"
  }, "Accent4 Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    variant: "muted"
  }, "Muted Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    variant: "highlight"
  }, "Highlight Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    variant: "gray"
  }, "Gray Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    size: "medium"
  }, "Medium Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    size: "small"
  }, "Small Button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    theme: {
      colors: {
        background: "#f8f0fc",
        primary: "#040086",
        modes: {
          dark: {
            background: "#333",
            primary: "#b4b2f7"
          }
        }
      },
      shadows: {
        "default": "0 .5rem 1rem rebeccapurple"
      }
    }
  }, "Custom theme button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    css: _ref
  }, "Custom css button"), (0, _core.jsx)(_Button["default"], {
    mode: mode,
    disabled: true
  }, "Disabled Button"))));
}

var _default = Buttons;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,