"use strict";

var _core = require("@emotion/core");

var _react = _interopRequireWildcard(require("react"));

require("@testing-library/react/cleanup-after-each");

require("@testing-library/jest-dom/extend-expect");

var _react2 = require("@testing-library/react");

var _Button = require("../components/Button.stories");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

afterEach(_react2.cleanup);
describe("onClick interactivity", function () {
  it("should fire onClick event", function () {
    var clicked = "Clicked!";

    function WrappedButton(_ref) {
      var disabled = _ref.disabled;

      var _useState = (0, _react.useState)("Primary Button"),
          _useState2 = _slicedToArray(_useState, 2),
          children = _useState2[0],
          setChildren = _useState2[1];

      var onClick = function onClick() {
        return setChildren(clicked);
      };

      return (0, _Button.primary)({
        children: children,
        onClick: onClick,
        disabled: disabled
      });
    }

    var comp = (0, _react2.render)((0, _core.jsx)(WrappedButton, null));

    _react2.fireEvent.click(comp.getByText("Primary Button"));

    expect(comp.getByText(clicked)).toBeTruthy();
  });
  it("should do nothing when disabled", function () {
    var initialState = "Primary Button";
    var clickedState = "Clicked!";

    function WrappedButton(_ref2) {
      var disabled = _ref2.disabled;

      var _useState3 = (0, _react.useState)(initialState),
          _useState4 = _slicedToArray(_useState3, 2),
          children = _useState4[0],
          setChildren = _useState4[1];

      var onClick = function onClick() {
        return setChildren(clickedState);
      };

      return (0, _Button.primary)({
        children: children,
        onClick: onClick,
        disabled: disabled
      });
    }

    var comp = (0, _react2.render)((0, _core.jsx)(WrappedButton, {
      disabled: true
    }));

    _react2.fireEvent.click(comp.getByText("Primary Button"));

    expect(comp.getByText(initialState)).toBeTruthy();
  });
});
describe("accessability", function () {
  it("should be focussable", function () {
    var _render = (0, _react2.render)((0, _Button.primary)()),
        getByTestId = _render.getByTestId;

    var id = "primary-button";
    getByTestId(id).focus();
    expect(getByTestId(id)).toHaveFocus();
  });
});
describe("renders", function () {
  it("as anchor element", function () {
    var element = "a";

    var _render2 = (0, _react2.render)((0, _Button.primary)({
      as: element
    })),
        container = _render2.container;

    var anchorEl = container.querySelector(element);
    expect(anchorEl).toBeInTheDocument();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9fX3Rlc3RzX18vQnV0dG9uLnRlc3QuanMiXSwibmFtZXMiOlsiYWZ0ZXJFYWNoIiwiY2xlYW51cCIsImRlc2NyaWJlIiwiaXQiLCJjbGlja2VkIiwiV3JhcHBlZEJ1dHRvbiIsImRpc2FibGVkIiwiY2hpbGRyZW4iLCJzZXRDaGlsZHJlbiIsIm9uQ2xpY2siLCJjb21wIiwiZmlyZUV2ZW50IiwiY2xpY2siLCJnZXRCeVRleHQiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5IiwiaW5pdGlhbFN0YXRlIiwiY2xpY2tlZFN0YXRlIiwiZ2V0QnlUZXN0SWQiLCJpZCIsImZvY3VzIiwidG9IYXZlRm9jdXMiLCJlbGVtZW50IiwiYXMiLCJjb250YWluZXIiLCJhbmNob3JFbCIsInF1ZXJ5U2VsZWN0b3IiLCJ0b0JlSW5UaGVEb2N1bWVudCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7OztBQUVBQSxTQUFTLENBQUNDLGVBQUQsQ0FBVDtBQUVBQyxRQUFRLENBQUMsdUJBQUQsRUFBMEIsWUFBTTtBQUN0Q0MsRUFBQUEsRUFBRSxDQUFDLDJCQUFELEVBQThCLFlBQU07QUFDcEMsUUFBTUMsT0FBTyxHQUFHLFVBQWhCOztBQUNBLGFBQVNDLGFBQVQsT0FBcUM7QUFBQSxVQUFaQyxRQUFZLFFBQVpBLFFBQVk7O0FBQUEsc0JBQ0gscUJBQVMsZ0JBQVQsQ0FERztBQUFBO0FBQUEsVUFDNUJDLFFBRDRCO0FBQUEsVUFDbEJDLFdBRGtCOztBQUVuQyxVQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBVTtBQUFBLGVBQU1ELFdBQVcsQ0FBQ0osT0FBRCxDQUFqQjtBQUFBLE9BQWhCOztBQUNBLGFBQU8scUJBQVE7QUFDYkcsUUFBQUEsUUFBUSxFQUFSQSxRQURhO0FBRWJFLFFBQUFBLE9BQU8sRUFBUEEsT0FGYTtBQUdiSCxRQUFBQSxRQUFRLEVBQVJBO0FBSGEsT0FBUixDQUFQO0FBS0Q7O0FBRUQsUUFBTUksSUFBSSxHQUFHLG9CQUFPLGVBQUMsYUFBRCxPQUFQLENBQWI7O0FBQ0FDLHNCQUFVQyxLQUFWLENBQWdCRixJQUFJLENBQUNHLFNBQUwsQ0FBZSxnQkFBZixDQUFoQjs7QUFDQUMsSUFBQUEsTUFBTSxDQUFDSixJQUFJLENBQUNHLFNBQUwsQ0FBZVQsT0FBZixDQUFELENBQU4sQ0FBZ0NXLFVBQWhDO0FBQ0QsR0FmQyxDQUFGO0FBaUJBWixFQUFBQSxFQUFFLENBQUMsaUNBQUQsRUFBb0MsWUFBTTtBQUMxQyxRQUFNYSxZQUFZLEdBQUcsZ0JBQXJCO0FBQ0EsUUFBTUMsWUFBWSxHQUFHLFVBQXJCOztBQUNBLGFBQVNaLGFBQVQsUUFBcUM7QUFBQSxVQUFaQyxRQUFZLFNBQVpBLFFBQVk7O0FBQUEsdUJBQ0gscUJBQVNVLFlBQVQsQ0FERztBQUFBO0FBQUEsVUFDNUJULFFBRDRCO0FBQUEsVUFDbEJDLFdBRGtCOztBQUVuQyxVQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBVTtBQUFBLGVBQU1ELFdBQVcsQ0FBQ1MsWUFBRCxDQUFqQjtBQUFBLE9BQWhCOztBQUNBLGFBQU8scUJBQVE7QUFDYlYsUUFBQUEsUUFBUSxFQUFSQSxRQURhO0FBRWJFLFFBQUFBLE9BQU8sRUFBUEEsT0FGYTtBQUdiSCxRQUFBQSxRQUFRLEVBQVJBO0FBSGEsT0FBUixDQUFQO0FBS0Q7O0FBRUQsUUFBTUksSUFBSSxHQUFHLG9CQUFPLGVBQUMsYUFBRDtBQUFlLE1BQUEsUUFBUTtBQUF2QixNQUFQLENBQWI7O0FBQ0FDLHNCQUFVQyxLQUFWLENBQWdCRixJQUFJLENBQUNHLFNBQUwsQ0FBZSxnQkFBZixDQUFoQjs7QUFDQUMsSUFBQUEsTUFBTSxDQUFDSixJQUFJLENBQUNHLFNBQUwsQ0FBZUcsWUFBZixDQUFELENBQU4sQ0FBcUNELFVBQXJDO0FBQ0QsR0FoQkMsQ0FBRjtBQWlCRCxDQW5DTyxDQUFSO0FBcUNBYixRQUFRLENBQUMsZUFBRCxFQUFrQixZQUFNO0FBQzlCQyxFQUFBQSxFQUFFLENBQUMsc0JBQUQsRUFBeUIsWUFBTTtBQUFBLGtCQUNQLG9CQUFPLHNCQUFQLENBRE87QUFBQSxRQUN2QmUsV0FEdUIsV0FDdkJBLFdBRHVCOztBQUUvQixRQUFNQyxFQUFFLEdBQUcsZ0JBQVg7QUFDQUQsSUFBQUEsV0FBVyxDQUFDQyxFQUFELENBQVgsQ0FBZ0JDLEtBQWhCO0FBQ0FOLElBQUFBLE1BQU0sQ0FBQ0ksV0FBVyxDQUFDQyxFQUFELENBQVosQ0FBTixDQUF3QkUsV0FBeEI7QUFDRCxHQUxDLENBQUY7QUFNRCxDQVBPLENBQVI7QUFTQW5CLFFBQVEsQ0FBQyxTQUFELEVBQVksWUFBTTtBQUN4QkMsRUFBQUEsRUFBRSxDQUFDLG1CQUFELEVBQXNCLFlBQU07QUFDNUIsUUFBTW1CLE9BQU8sR0FBRyxHQUFoQjs7QUFENEIsbUJBRU4sb0JBQU8scUJBQVE7QUFBRUMsTUFBQUEsRUFBRSxFQUFFRDtBQUFOLEtBQVIsQ0FBUCxDQUZNO0FBQUEsUUFFcEJFLFNBRm9CLFlBRXBCQSxTQUZvQjs7QUFHNUIsUUFBTUMsUUFBUSxHQUFHRCxTQUFTLENBQUNFLGFBQVYsQ0FBd0JKLE9BQXhCLENBQWpCO0FBQ0FSLElBQUFBLE1BQU0sQ0FBQ1csUUFBRCxDQUFOLENBQWlCRSxpQkFBakI7QUFDRCxHQUxDLENBQUY7QUFNRCxDQVBPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3QvY2xlYW51cC1hZnRlci1lYWNoXCI7XG5pbXBvcnQgXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tL2V4dGVuZC1leHBlY3RcIjtcbmltcG9ydCB7IHJlbmRlciwgZmlyZUV2ZW50LCBjbGVhbnVwIH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3RcIjtcblxuaW1wb3J0IHsgcHJpbWFyeSB9IGZyb20gXCIuLi9jb21wb25lbnRzL0J1dHRvbi5zdG9yaWVzXCI7XG5cbmFmdGVyRWFjaChjbGVhbnVwKTtcblxuZGVzY3JpYmUoXCJvbkNsaWNrIGludGVyYWN0aXZpdHlcIiwgKCkgPT4ge1xuICBpdChcInNob3VsZCBmaXJlIG9uQ2xpY2sgZXZlbnRcIiwgKCkgPT4ge1xuICAgIGNvbnN0IGNsaWNrZWQgPSBcIkNsaWNrZWQhXCI7XG4gICAgZnVuY3Rpb24gV3JhcHBlZEJ1dHRvbih7IGRpc2FibGVkIH0pIHtcbiAgICAgIGNvbnN0IFtjaGlsZHJlbiwgc2V0Q2hpbGRyZW5dID0gdXNlU3RhdGUoXCJQcmltYXJ5IEJ1dHRvblwiKTtcbiAgICAgIGNvbnN0IG9uQ2xpY2sgPSAoKSA9PiBzZXRDaGlsZHJlbihjbGlja2VkKTtcbiAgICAgIHJldHVybiBwcmltYXJ5KHtcbiAgICAgICAgY2hpbGRyZW4sXG4gICAgICAgIG9uQ2xpY2ssXG4gICAgICAgIGRpc2FibGVkXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBjb21wID0gcmVuZGVyKDxXcmFwcGVkQnV0dG9uIC8+KTtcbiAgICBmaXJlRXZlbnQuY2xpY2soY29tcC5nZXRCeVRleHQoXCJQcmltYXJ5IEJ1dHRvblwiKSk7XG4gICAgZXhwZWN0KGNvbXAuZ2V0QnlUZXh0KGNsaWNrZWQpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIGl0KFwic2hvdWxkIGRvIG5vdGhpbmcgd2hlbiBkaXNhYmxlZFwiLCAoKSA9PiB7XG4gICAgY29uc3QgaW5pdGlhbFN0YXRlID0gXCJQcmltYXJ5IEJ1dHRvblwiO1xuICAgIGNvbnN0IGNsaWNrZWRTdGF0ZSA9IFwiQ2xpY2tlZCFcIjtcbiAgICBmdW5jdGlvbiBXcmFwcGVkQnV0dG9uKHsgZGlzYWJsZWQgfSkge1xuICAgICAgY29uc3QgW2NoaWxkcmVuLCBzZXRDaGlsZHJlbl0gPSB1c2VTdGF0ZShpbml0aWFsU3RhdGUpO1xuICAgICAgY29uc3Qgb25DbGljayA9ICgpID0+IHNldENoaWxkcmVuKGNsaWNrZWRTdGF0ZSk7XG4gICAgICByZXR1cm4gcHJpbWFyeSh7XG4gICAgICAgIGNoaWxkcmVuLFxuICAgICAgICBvbkNsaWNrLFxuICAgICAgICBkaXNhYmxlZFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgY29tcCA9IHJlbmRlcig8V3JhcHBlZEJ1dHRvbiBkaXNhYmxlZCAvPik7XG4gICAgZmlyZUV2ZW50LmNsaWNrKGNvbXAuZ2V0QnlUZXh0KFwiUHJpbWFyeSBCdXR0b25cIikpO1xuICAgIGV4cGVjdChjb21wLmdldEJ5VGV4dChpbml0aWFsU3RhdGUpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xufSk7XG5cbmRlc2NyaWJlKFwiYWNjZXNzYWJpbGl0eVwiLCAoKSA9PiB7XG4gIGl0KFwic2hvdWxkIGJlIGZvY3Vzc2FibGVcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcihwcmltYXJ5KCkpO1xuICAgIGNvbnN0IGlkID0gXCJwcmltYXJ5LWJ1dHRvblwiO1xuICAgIGdldEJ5VGVzdElkKGlkKS5mb2N1cygpO1xuICAgIGV4cGVjdChnZXRCeVRlc3RJZChpZCkpLnRvSGF2ZUZvY3VzKCk7XG4gIH0pO1xufSk7XG5cbmRlc2NyaWJlKFwicmVuZGVyc1wiLCAoKSA9PiB7XG4gIGl0KFwiYXMgYW5jaG9yIGVsZW1lbnRcIiwgKCkgPT4ge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBcImFcIjtcbiAgICBjb25zdCB7IGNvbnRhaW5lciB9ID0gcmVuZGVyKHByaW1hcnkoeyBhczogZWxlbWVudCB9KSk7XG4gICAgY29uc3QgYW5jaG9yRWwgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcihlbGVtZW50KTtcbiAgICBleHBlY3QoYW5jaG9yRWwpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gIH0pO1xufSk7XG4iXX0=